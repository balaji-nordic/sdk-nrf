name: Sonarcloud analysis (native_posix cmake only)
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Sonar cloud analysis
    runs-on: ubuntu-latest
    container: zephyrprojectrtos/ci:v0.26.6
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          path: ncs/nrf
          fetch-depth: 0

      # Install more dependencies that are not part of the docker image but are needed by the workflow
      - name: Install more deps
        run: |
          apt-get update
          apt install -y curl ruby-full jq
          pip3 install zcbor

      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v2.0.2

      # The docker image comes pre-initialized with west dependencies. We want to do west update ourselves to to be sure that we get the latest changes in all repos.
      # The docker image is built nightly. So it may contain slightly out of date repos.
      # Hence we remove the .west folder and do a re-init
      - name: West init and update
        run: |
          rm -rf /workdir/.west/
          west init -l ncs/nrf
          cd ncs
          west update --narrow -o=--depth=1

      - name: Generate compilation db for native_posix tests
        shell: bash
        run: |
          source ncs/zephyr/zephyr-env.sh
          west twister --ninja --quarantine-list ncs/nrf/scripts/quarantine.yaml --clobber-output --cmake-only -v -i -T ncs/nrf -p native_posix

      # Since sonarscanner accepts just one json file for compilation database, we need to
      # combine all the compile_commands.json files into one.
      - name: Combine compilation database.
        shell: bash
        run: |
          jq -s 'map(.[])' `find . -name compile_commands.json` > combined_compile_commands.json

      - name: Run sonar-scanner on PR
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_BRANCH: ${{ github.event.pull_request.head.ref }}
          BASE_REF: ${{ github.event.pull_request.base.ref }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define project.settings=ncs/nrf/sonar-project-nativeposix.properties \
                        --define sonar.scm.revision=${{ env.HEAD_SHA }} \
                        --define sonar.pullrequest.key=${{ env.PR_NUMBER }} \
                        --define sonar.pullrequest.branch=${{ env.PR_BRANCH }} \
                        --define sonar.pullrequest.base=${{ env.BASE_REF }}
