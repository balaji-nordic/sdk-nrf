# Workflow that runs static code analysis using sonarcloud.io.
name: Sonarcloud analysis
on:
  push:
    branches:
      - main
  workflow_dispatch:  # This is added to be able to trigger this manually from github's web UI.

jobs:
  build:
    name: Sonar cloud analysis
    runs-on: self-hosted
    container: zephyrprojectrtos/ci:v0.26.4
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          path: ncs/nrf
          fetch-depth: 0

      # Install more dependencies that are not part of the docker image but are needed by the workflow
      - name: Install more deps
        run: |
          apt-get update
          apt install -y lcov curl ruby-full

      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v2.0.2

      # The docker image comes pre-initialized with west dependencies. We want to do west update ourselves to to be sure that we get the latest changes in all repos.
      # The docker image is built nightly. So it may contain slightly out of date repos.
      # Hence we remove the .west folder and do a re-init
      - name: West init and update
        run: |
          rm -rf /workdir/.west/
          west init -l ncs/nrf
          cd ncs
          west update --narrow -o=--depth=1

      - name: Invoke build wrapper with twister command to build with integrations scope
        shell: bash
        continue-on-error: true # Some samples fail to compile due to missing tools in the docker image.
        run: |
          source ncs/zephyr/zephyr-env.sh
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} ncs/zephyr/scripts/twister --ninja --integration --board-root ncs/nrf/boards --quarantine-list ncs/nrf/scripts/quarantine.yaml --clobber-output --build-only -v -i -T ncs/nrf

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -X \
                        --define project.settings=ncs/nrf/sonar-project.properties \
                        --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
